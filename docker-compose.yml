
services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: timetrack_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-timetrack_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-timetrack_password}
      POSTGRES_DB: ${POSTGRES_DB:-timetrack_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - timetrack_network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: timetrack_backend
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-timetrack_user}:${POSTGRES_PASSWORD:-timetrack_password}@postgres:5432/${POSTGRES_DB:-timetrack_db}
      - SECRET_KEY=${SECRET_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
    networks:
      - timetrack_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: timetrack_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_SUPABASE_URL=${SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - timetrack_network
    command: npm run dev

volumes:
  postgres_data:

networks:
  timetrack_network:
    driver: bridge
